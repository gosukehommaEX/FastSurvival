% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysisData.R
\name{analysisData}
\alias{analysisData}
\title{Create analysis datasets from clinical trial simulation data}
\usage{
analysisData(data, E = NULL, followup = NULL)
}
\arguments{
\item{data}{A tibble containing simulation data generated by \code{\link{simTrial}}.
Must contain columns: simID, group, accrual.time, surv.time, dropout.time,
tte, total, dropout. May optionally contain subgroup column.}

\item{E}{A numeric vector specifying the target number of events for each analysis.
Each element represents a different analysis timepoint (e.g., interim, final).
Cannot be used with followup. Default is NULL.}

\item{followup}{A numeric vector specifying the follow-up times for each analysis.
Each element represents the calendar time from study start for analysis.
Cannot be used with E. Default is NULL.}
}
\value{
A tibble containing the analysis datasets with the following columns:
\describe{
\item{analysis}{Analysis number (1, 2, 3, ...) corresponding to each element in E or followup}
\item{simID}{Simulation iteration ID (1 to nsim)}
\item{group}{Group indicator (1, 2, 3, ...)}
\item{subgroup}{Subgroup indicator (A, B, C, ...) - only present if subgroups are specified}
\item{accrual.time}{Patient accrual time from study start}
\item{surv.time}{Original survival time from patient entry}
\item{dropout.time}{Original dropout time from patient entry}
\item{tte}{Time-to-event (adjusted for analysis cutoff)}
\item{total}{Original total time from study start}
\item{dropout}{Original dropout indicator from simTrial}
\item{analysis.time}{Analysis cutoff time (calendar time from study start)}
\item{event}{Event indicator for analysis (1 = event occurred by cutoff, 0 = censored at cutoff)}
}
}
\description{
This function creates analysis datasets from simulation data generated by simTrial()
based on either target number of events or follow-up times for interim and final
analyses using tidyverse packages. It handles data cutoffs and censoring
appropriately for time-to-event analysis.
}
\details{
This function is essential for simulating adaptive trial designs and interim analyses.
It supports two main approaches:

\describe{
\item{Event-driven Analysis (E parameter)}{
Analysis is triggered when a target number of events is observed across all
groups. The analysis time is determined as the calendar time when the E-th
event occurs. This is common in oncology trials where analyses are performed
after accumulating a predetermined number of deaths.
}
\item{Time-driven Analysis (followup parameter)}{
Analysis is performed at predetermined calendar times from study start,
regardless of the number of events observed. This is common in cardiovascular
trials with planned interim analyses at fixed timepoints.
}
}

For each analysis, the function:
\itemize{
\item Determines the appropriate analysis cutoff time
\item Adjusts time-to-event data for patients not yet recruited at cutoff
\item Censors events occurring after the cutoff time
\item Creates appropriate event indicators for statistical analysis
}

The resulting dataset can be used directly with survival analysis functions
like \code{\link{lrtest}} and \code{\link{esthr}}.
}
\examples{
library(dplyr)

# Generate trial data for analysis
trial_data <- simTrial(
  nsim = 100,
  N = list(
    control = c(A = 25, B = 112, C = 113),
    treatment = c(A = 25, B = 112, C = 113)
  ),
  a.time = c(0, 12.5),
  intensity = 40,
  e.time = list(
    control = list(A = c(0, Inf), B = c(0, Inf), C = c(0, Inf)),
    treatment = list(A = c(0, Inf), B = c(0, Inf), C = c(0, Inf))
  ),
  e.hazard = list(
    control = list(A = log(2) / 4.3, B = log(2) / 4.3, C = log(2) / 4.3),
    treatment = list(A = log(2) / 5.811, B = log(2) / 5.811, C = log(2) / 5.811)
  ),
  d.time = NULL,
  d.hazard = NULL,
  seed = 1
)

# Example 1: Event-driven analyses
# Interim at 141 events, interim at 246 events, final at 352 events
analysis_events <- analysisData(trial_data, E = c(141, 246, 352))

# Check event counts by analysis
event_summary <- analysis_events \%>\%
  group_by(analysis, simID) \%>\%
  summarise(
    total_events = sum(event),
    total_patients = n(),
    analysis_time = unique(analysis.time),
    .groups = 'drop'
  )

print(event_summary[event_summary$simID == 1, ])  # Show first simulation

# Example 2: Time-driven analyses
# Analyses at 15, 20, and 25 months from study start
analysis_time <- analysisData(trial_data, followup = c(15, 20, 25))

# Compare event counts between event-driven and time-driven
time_events <- analysis_time \%>\%
  group_by(analysis, simID) \%>\%
  summarise(
    total_events = sum(event),
    total_patients = n(),
    analysis_time = unique(analysis.time),
    .groups = 'drop'
  )

print(time_events[time_events$simID == 1, ])

}
\seealso{
\code{\link{simTrial}} for generating the input trial data,
\code{\link{lrtest}} and \code{\link{esthr}} for statistical analysis
}
