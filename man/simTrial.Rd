% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simTrial.R
\name{simTrial}
\alias{simTrial}
\title{Simulate clinical trial data for multiple groups with optional subgroups using data.table}
\usage{
simTrial(
  nsim = 1000,
  N,
  a.time,
  intensity = NULL,
  proportion = NULL,
  e.time,
  e.hazard,
  d.time,
  d.hazard,
  seed = NULL
)
}
\arguments{
\item{nsim}{A positive integer specifying the number of simulation iterations. Default is 1000.}

\item{N}{A list where each element corresponds to a group, and if subgroups exist,
each element is a named vector with subgroup sample sizes. If no subgroups,
a vector of sample sizes for each group.}

\item{a.time}{A list where each element corresponds to a group (and subgroup if applicable),
containing time points defining the accrual intervals. Time points must be in increasing order.}

\item{intensity}{A list where each element corresponds to a group (and subgroup if applicable),
containing accrual intensities. Cannot be used with proportion. Default is NULL.}

\item{proportion}{A list where each element corresponds to a group (and subgroup if applicable),
containing accrual proportions. Cannot be used with intensity. Default is NULL.}

\item{e.time}{A list where each element corresponds to a group (and subgroup if applicable),
containing time points defining the survival time intervals. Last element must be Inf.}

\item{e.hazard}{A list where each element corresponds to a group (and subgroup if applicable),
containing hazard rates for survival time. All values must be positive.}

\item{d.time}{A list where each element corresponds to a group (and subgroup if applicable),
containing time points defining the dropout time intervals. Last element must be Inf.}

\item{d.hazard}{A list where each element corresponds to a group (and subgroup if applicable),
containing hazard rates for dropout time. All values must be positive.}

\item{seed}{A positive integer for random seed setting. Default is NULL.}
}
\value{
A data.table containing the simulated clinical trial data with the following columns:
\describe{
\item{simID}{Simulation iteration ID (1 to nsim)}
\item{group}{Group indicator (1, 2, 3, ...)}
\item{subgroup}{Subgroup indicator (A, B, C, ...) - only present if subgroups are specified}
\item{accrual.time}{Patient accrual time from study start}
\item{surv.time}{Survival time from patient entry}
\item{dropout.time}{Time to dropout from patient entry}
\item{tte}{Time-to-event (minimum of survival time and dropout time)}
\item{total}{Total time from study start (accrual time + time-to-event)}
\item{dropout}{Dropout indicator (1 = dropout occurred, 0 = event occurred)}
}
}
\description{
This function generates simulation datasets for clinical trials with multiple treatment
groups and optional subgroups using data.table for maximum performance and memory efficiency.
It extends the functionality of simData to handle complex trial designs with time-to-event
endpoints, accounting for piecewise uniform distribution for patient accrual and piecewise
exponential distributions for patient survival time and dropout time.
}
\details{
This function is the main workhorse for clinical trial simulation in the FastSurvival
package. It supports:

\describe{
\item{Multiple Treatment Groups}{
Each group can have different accrual patterns, survival distributions,
and dropout rates.
}
\item{Subgroup Analysis}{
Within each treatment group, subgroups can be defined with distinct
characteristics (e.g., different biomarker status).
}
\item{Flexible Accrual Patterns}{
Each group/subgroup can have unique recruitment patterns using either
intensity rates or proportion-based allocation.
}
\item{Complex Survival Scenarios}{
Supports delayed treatment effects, time-varying hazards, and different
dropout patterns across groups.
}
}

The function uses piecewise exponential and uniform distributions to provide
maximum flexibility while maintaining computational efficiency.
}
\examples{
library(data.table)

# Example 1: Simple two-group trial without subgroups
set.seed(123)
trial1 <- simTrial(
  nsim = 100,
  N = list(group1 = 100, group2 = 100),
  a.time = list(
    group1 = c(0, 24),
    group2 = c(0, 24)
  ),
  intensity = list(
    group1 = 100/24,  # Control group
    group2 = 100/24   # Treatment group
  ),
  e.time = list(
    group1 = c(0, Inf),
    group2 = c(0, Inf)
  ),
  e.hazard = list(
    group1 = log(2) / 12,    # Control: median = 12 months
    group2 = log(2) / 15     # Treatment: median = 15 months
  ),
  d.time = list(
    group1 = c(0, Inf),
    group2 = c(0, Inf)
  ),
  d.hazard = list(
    group1 = -log(1 - 0.1) / 12,  # 10\% annual dropout
    group2 = -log(1 - 0.1) / 12   # Same dropout rate
  )
)

# Summary of first simulation
print(trial1[simID == 1, .N, by = group])

# Example 2: Two groups with subgroups (biomarker positive/negative)
trial2 <- simTrial(
  nsim = 50,
  N = list(
    group1 = c(A = 50, B = 50),    # Control: 50 biomarker+, 50 biomarker-
    group2 = c(A = 60, B = 40)     # Treatment: 60 biomarker+, 40 biomarker-
  ),
  a.time = list(
    group1 = list(A = c(0, 12), B = c(0, 18)),
    group2 = list(A = c(0, 12), B = c(0, 18))
  ),
  intensity = list(
    group1 = list(A = 50/12, B = 50/18),
    group2 = list(A = 60/12, B = 40/18)
  ),
  e.time = list(
    group1 = list(A = c(0, Inf), B = c(0, Inf)),
    group2 = list(A = c(0, Inf), B = c(0, Inf))
  ),
  e.hazard = list(
    group1 = list(A = 0.08, B = 0.12),    # Control: better prognosis for A
    group2 = list(A = 0.05, B = 0.08)     # Treatment: benefit in both subgroups
  ),
  d.time = list(
    group1 = list(A = c(0, Inf), B = c(0, Inf)),
    group2 = list(A = c(0, Inf), B = c(0, Inf))
  ),
  d.hazard = list(
    group1 = list(A = 0.01, B = 0.015),   # Slightly higher dropout in B
    group2 = list(A = 0.01, B = 0.015)
  )
)

# Analyze subgroup effects
subgroup_summary <- trial2[simID == 1, .(
  n_patients = .N,
  events = sum(1 - dropout),
  median_tte = median(tte)
), by = .(group, subgroup)]
print(subgroup_summary)

# Example 3: Complex trial with delayed treatment effect
trial3 <- simTrial(
  nsim = 100,
  N = list(control = 150, treatment = 150),
  a.time = list(
    control = c(0, 6, 12, 18),
    treatment = c(0, 6, 12, 18)
  ),
  intensity = list(
    control = c(10, 15, 20),     # Varying recruitment rates
    treatment = c(10, 15, 20)
  ),
  e.time = list(
    control = c(0, Inf),
    treatment = c(0, 6, Inf)     # Treatment effect after 6 months
  ),
  e.hazard = list(
    control = 0.1,              # Constant hazard
    treatment = c(0.1, 0.06)    # Reduced hazard after 6 months
  ),
  d.time = list(
    control = c(0, Inf),
    treatment = c(0, Inf)
  ),
  d.hazard = list(
    control = 0.02,
    treatment = 0.02
  ),
  seed = 789
)

# Perform log-rank test on first simulation
test_data <- trial3[simID == 1]
lr_result <- FastLRtest(
  time = test_data$tte,
  event = 1 - test_data$dropout,
  group = test_data$group,
  control = 1,
  side = 2
)
cat("Log-rank chi-square statistic:", lr_result, "\n")

# Visualize survival curves for delayed effect
library(survival)
km_fit <- survfit(Surv(tte, 1 - dropout) ~ group, data = test_data)
plot(km_fit, col = c("red", "blue"),
     main = "Survival Curves with Delayed Treatment Effect",
     xlab = "Time (months)", ylab = "Survival Probability")
legend("topright", c("Control", "Treatment"), col = c("red", "blue"), lty = 1)

# Example 4: Trial with proportional accrual
trial4 <- simTrial(
  nsim = 200,
  N = list(arm1 = 100, arm2 = 100, arm3 = 100),
  a.time = list(
    arm1 = c(0, 12, 24),
    arm2 = c(0, 12, 24),
    arm3 = c(0, 12, 24)
  ),
  proportion = list(
    arm1 = c(0.4, 0.6),  # 40\% in first 12 months, 60\% in next 12
    arm2 = c(0.3, 0.7),  # Different pattern for arm 2
    arm3 = c(0.5, 0.5)   # Even split for arm 3
  ),
  e.time = list(
    arm1 = c(0, Inf),
    arm2 = c(0, Inf),
    arm3 = c(0, Inf)
  ),
  e.hazard = list(
    arm1 = 0.12,    # Control
    arm2 = 0.09,    # Low dose
    arm3 = 0.07     # High dose
  ),
  d.time = list(
    arm1 = c(0, Inf),
    arm2 = c(0, Inf),
    arm3 = c(0, Inf)
  ),
  d.hazard = list(
    arm1 = 0.015,
    arm2 = 0.020,   # Slightly higher dropout with treatment
    arm3 = 0.025    # Highest dropout with high dose
  )
)

# Calculate power across simulations for pairwise comparisons
power_analysis <- trial4[, {
  # Control vs Low dose
  lr1 <- FastLRtest(tte[group \%in\% c(1,2)],
                    1 - dropout[group \%in\% c(1,2)],
                    group[group \%in\% c(1,2)], 1, 2)
  # Control vs High dose
  lr2 <- FastLRtest(tte[group \%in\% c(1,3)],
                    1 - dropout[group \%in\% c(1,3)],
                    group[group \%in\% c(1,3)], 1, 2)

  list(control_vs_low = lr1 > qchisq(0.95, 1),
       control_vs_high = lr2 > qchisq(0.95, 1))
}, by = simID]

# Power calculation
cat("Power (Control vs Low dose):", mean(power_analysis$control_vs_low), "\n")
cat("Power (Control vs High dose):", mean(power_analysis$control_vs_high), "\n")

}
\references{
Luo, X., Mao, X., Chen, X., Qiu, J., Bai, S., & Quan, H. (2019).
Design and monitoring of survival trials in complex scenarios.
Statistics in Medicine, 38(2), 192-209.

Friedman, L. M., Furberg, C. D., & DeMets, D. L. (2010).
Fundamentals of Clinical Trials (4th ed.). Springer.

Proschan, M. A., Lan, K. K. G., & Wittes, J. T. (2006).
Statistical Monitoring of Clinical Trials: A Unified Approach. Springer.
}
\seealso{
\code{\link{simData}} for single-group simulation,
\code{\link{analysisData}} for creating analysis datasets,
\code{\link{FastLRtest}} and \code{\link{FastHRest}} for statistical analysis
}
